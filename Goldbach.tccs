%% TCCs associated with theory Goldbach
%% This file was automatically generated by PVS, please **do not modify** by hand.
Goldbach_TCCS: THEORY BEGIN

	% Subtype TCC generated (at line 14, column 47) for  n - 1
	% expected type  nat
	  % proved
	list_of_primes_TCC1: OBLIGATION
	FORALL (n: nat): NOT n < 2 AND prime?(n) IMPLIES n - 1 >= 0
	
	% Termination TCC generated (at line 14, column 32) for
	% list_of_primes(n - 1)
	  % proved
	list_of_primes_TCC2: OBLIGATION
	FORALL (n: nat): NOT n < 2 AND prime?(n) IMPLIES n - 1 < n
	
	% Subtype TCC generated (at line 14, column 52) for  (: n :)
	% expected type  list[(prime?)]
	  % proved
	list_of_primes_TCC3: OBLIGATION
	FORALL (n: nat):
	    NOT n < 2 AND prime?(n) IMPLIES
	     every[number]
	         (LAMBDA (x: number):
	                 number_field_pred(x) AND real_pred(x) AND rational_pred(x)
	             AND integer_pred(x) AND (prime?)(x))
	         ((: n :))
	
	% Subtype TCC generated (at line 15, column 24) for  n - 1
	% expected type  nat
	  % proved
	list_of_primes_TCC4: OBLIGATION
	FORALL (n: nat): NOT n < 2 AND NOT prime?(n) IMPLIES n - 1 >= 0
	
	% Termination TCC generated (at line 15, column 9) for
	% list_of_primes(n - 1)
	  % proved
	list_of_primes_TCC5: OBLIGATION
	FORALL (n: nat): NOT n < 2 AND NOT prime?(n) IMPLIES n - 1 < n
	
	% Subtype TCC generated (at line 26, column 13) for  l
	% expected type  (cons?[nat])
	  % proved
	prod_list_TCC1: OBLIGATION
	FORALL (l: list[nat]): NOT null?(l) IMPLIES cons?[nat](l)
	
	% Termination TCC generated (at line 26, column 18) for  prod_list(cdr(l))
	  % proved
	prod_list_TCC2: OBLIGATION
	FORALL (l: list[nat]):
	    NOT null?(l) IMPLIES length[nat](cdr[nat](l)) < length[nat](l)
	
	% The subtype TCC (at line 26, column 32) in decl prod_list for  l
	% expected type  (cons?[nat])
	% Subtype TCC generated (at line 33, column 37) for  i
	% expected type  below[length[int](list_of_primes(n))]
	  % proved
	signature_pred_TCC1: OBLIGATION
	FORALL (n: nat,
	          l: list[nat] | length[nat](l) = length[(prime?)](list_of_primes(n)),
	          i: below[length[nat](l)]):
	    i < length[int](list_of_primes(n))
	
	% The subtype TCC (at line 26, column 32) in decl prod_list for  l
	    % expected type  (cons?[nat])
	  % is subsumed by prod_list_TCC1
	
	% Termination TCC generated (at line 38, column 36) for  sign_aux(n)(t)
	  % proved
	sign_aux_TCC1: OBLIGATION
	FORALL (l: list[posnat], h: posnat, t: list[posnat]):
	    l = cons(h, t) IMPLIES length[posnat](t) < length[posnat](l)
	
	% Subtype TCC generated (at line 50, column 23) for  i
	% expected type  below[length[nat](sign_aux(n)(l))]
	  % proved
	sign_aux_correctness_TCC1: OBLIGATION
	FORALL (n: nat, l: list[posnat], i: below[length[posnat](l)]):
	    i < length[nat](sign_aux(n)(l))
	
	% Subtype TCC generated (at line 53, column 16) for  list_of_primes(n)
	% expected type  list[posnat]
	  % proved
	signature_TCC1: OBLIGATION
	FORALL (n: nat):
	    every[number]
	        (LAMBDA (x: number):
	                number_field_pred(x) AND real_pred(x) AND rational_pred(x)
	            AND integer_pred(x) AND (x >= 0) AND (x > 0))
	        (list_of_primes(n))
	
	% Subtype TCC generated (at line 53, column 4) for
	% sign_aux(m)(list_of_primes(n))
	% expected type  (signature_pred(n))
	  % proved
	signature_TCC2: OBLIGATION
	FORALL (n, m: nat):
	    length[nat](sign_aux(m)(list_of_primes(n))) =
	     length[(prime?)](list_of_primes(n))
	     AND signature_pred(n)(sign_aux(m)(list_of_primes(n)))

END Goldbach_TCCS